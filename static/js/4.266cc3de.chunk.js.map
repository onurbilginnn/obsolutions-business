{"version":3,"sources":["containers/CustomContract/CustomContract.module.css","../node_modules/react-bootstrap/esm/Row.js","containers/CustomContract/ServiceRow/ServiceRow.js","components/UI/OBAccordion/OBAccordion.js","containers/CustomContract/ServiceRow/ServiceRowHeader.js","util/Word/customContract_word.js","containers/CustomContract/CustomContract.js","components/UI/CompanyAndLogo/CompanyAndLogo.module.css","components/UI/DropZone/DropZoneSingleFile.js","components/UI/CompanyAndLogo/CompanyAndLogo.js"],"names":["module","exports","DEVICE_SIZES","Row","React","forwardRef","_ref","ref","bsPrefix","className","noGutters","_ref$as","as","Component","props","_objectWithoutPropertiesLoose","decoratedBsPrefix","useBootstrapPrefix","sizePrefix","classes","forEach","brkPoint","cols","propValue","infix","push","createElement","_extends","classNames","apply","concat","displayName","defaultProps","ServiceRow","useState","rowId","jsxkey","qty","unitType","serviceDesc","unitPrice","totalAmount","serviceRowValues","setServiceRowValues","useEffect","onGetServiceRowValues","Form","Group","Col","ButtonGroup","Button","variant","onClick","onDelete","disabled","first","Control","onChange","e","prevState","target","value","parseFloat","type","InputGroup","FormControl","Prepend","Text","OBAccordion","Accordion","Card","Header","Toggle","eventKey","onToggleTxtAccordion","title","isPlus","Collapse","rows","placeholder","onTextChange","ServiceRowHeader","colw","Label","labelclass","label","customContractWord","img","data","contractTableHeaders","doc","Document","styles","default","heading1","run","size","bold","color","heading3","noBorder","top","style","BorderStyle","NONE","bottom","left","right","contractTableMargins","convertInchesToTwip","createContractRowGrands","subTotalName","subTotalAmount","textInNextCell","row","TableRow","children","TableCell","Paragraph","text","heading","HeadingLevel","HEADING_3","margins","toString","height","headTable","Table","borders","alignment","AlignmentType","CENTER","verticalAlign","companyName","HEADING_1","image","Media","addImage","Uint8Array","from","atob","c","charCodeAt","firstLineIndent","entryTxtParagraph","contractTable","lastTxtParagraph","signArea","entryTxt","indent","firstLine","lastTxt","grandTotal","contractTableHeaderCells","header","width","contractTableHeader","tableHeader","contractTableAllRows","el","serviceItems","contractTableDataCells","opts","console","log","parseInt","toFixed","discount","discountAmount","tax","taxAmount","netAmount","isSignAreaVisible","END","addSection","date","Packer","toBlob","then","blob","saveAs","CustomContract","pageLoadedCount","useRef","Date","isAccordionShown","setIsAccordionShown","clearForm","setClearForm","isDeletion","setIsDeletion","companyLogo","setCompanyLogo","childServiceRowValue","setChildServiceRowValue","isTouched","getDate","getMonth","getFullYear","controls","setControls","contractRowHeaderArr","colW","labelClass","contractRowHeaders","map","obj","toggleTxtAccordionHandler","innerHTML","split","getServiceRowValuesHandler","values","firstRowKey","now","serviceRows","setServiceRows","deleteServiceRowHandler","index","i","length","key","updatedTaxAmount","updatedDiscountAmount","updatedNetAmount","updatedServiceItems","updatedGrandTotal","updatedServiceRows","filter","item","current","CustomContractContainer","CompanyAndLogo","onInputChange","compName","inputValue","inputType","inputPlaceholder","dropZoneLabel","onClearDropzone","dropTxt","dropNote","fileTypes","file_type_error_msg","ongetbase64","base64Img","maxFileSize","SectionContainer","marginBottom","serviceRowArr","objKey","column","sm","discountperc","discAmount","netTotal","taxperc","TotalsContainer","Check","checked","updatedcontractRowHeaderArr","wordData","logo","formData","customContractToWord","DropZoneSingleFile","setIsBtnDisabled","base64Image","setBase64Image","useDropzone","accept","acceptedFiles","maxFiles","maxSize","fileRejections","getRootProps","getInputProps","formClear","splice","acceptedFileItems","file","path","src","alt","fileRejectionItems","errors","code","file_type_error","getBase64","a","reader","FileReader","readAsDataURL","Promise","resolve","reject","onload","result","onerror","error","getBase64Img","droptext","dropnote","inputLabel"],"mappings":"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","file":"static/js/4.266cc3de.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"CustomContractContainer\":\"CustomContract_CustomContractContainer__2eN6I\",\"SectionContainer\":\"CustomContract_SectionContainer__1rLmP\",\"TotalsContainer\":\"CustomContract_TotalsContainer__T4-Tw\"};","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport classNames from 'classnames';\nimport React from 'react';\nimport { useBootstrapPrefix } from './ThemeProvider';\nvar DEVICE_SIZES = ['xl', 'lg', 'md', 'sm', 'xs'];\nvar defaultProps = {\n  noGutters: false\n};\nvar Row = /*#__PURE__*/React.forwardRef(function (_ref, ref) {\n  var bsPrefix = _ref.bsPrefix,\n      className = _ref.className,\n      noGutters = _ref.noGutters,\n      _ref$as = _ref.as,\n      Component = _ref$as === void 0 ? 'div' : _ref$as,\n      props = _objectWithoutPropertiesLoose(_ref, [\"bsPrefix\", \"className\", \"noGutters\", \"as\"]);\n\n  var decoratedBsPrefix = useBootstrapPrefix(bsPrefix, 'row');\n  var sizePrefix = decoratedBsPrefix + \"-cols\";\n  var classes = [];\n  DEVICE_SIZES.forEach(function (brkPoint) {\n    var propValue = props[brkPoint];\n    delete props[brkPoint];\n    var cols;\n\n    if (propValue != null && typeof propValue === 'object') {\n      cols = propValue.cols;\n    } else {\n      cols = propValue;\n    }\n\n    var infix = brkPoint !== 'xs' ? \"-\" + brkPoint : '';\n    if (cols != null) classes.push(\"\" + sizePrefix + infix + \"-\" + cols);\n  });\n  return /*#__PURE__*/React.createElement(Component, _extends({\n    ref: ref\n  }, props, {\n    className: classNames.apply(void 0, [className, decoratedBsPrefix, noGutters && 'no-gutters'].concat(classes))\n  }));\n});\nRow.displayName = 'Row';\nRow.defaultProps = defaultProps;\nexport default Row;","import React, { useEffect, useState } from 'react';\nimport {\n    Button,\n    Form,\n    Col,\n    ButtonGroup,\n    InputGroup,\n    FormControl,\n} from 'react-bootstrap';\n\nconst ServiceRow = props => {\n    const [serviceRowValues, setServiceRowValues] = useState({\n        rowId: props.jsxkey,\n        qty: '',\n        unitType: 'Adet',\n        serviceDesc: '',\n        unitPrice: '',\n        totalAmount: ''\n    });\n\n    const onGetQty = e => {\n        setServiceRowValues(prevState => {\n           return{\n               ...prevState,\n               qty: e.target.value,\n               totalAmount: parseFloat(e.target.value) * parseFloat(prevState.unitPrice) || 0\n           };\n        });\n    };\n\n    const onGetUnitType = e => {\n        setServiceRowValues(prevState => {\n           return{\n               ...prevState,\n               unitType: e.target.value\n           };\n        });\n    };\n\n    const onGetServiceDesc = e => {\n        setServiceRowValues(prevState => {\n           return{\n               ...prevState,\n               serviceDesc: e.target.value\n           };\n        });\n    };\n\n    const onGetUnitPrice = e => {\n        setServiceRowValues(prevState => {\n            return{\n                ...prevState,\n                unitPrice: e.target.value ,\n                totalAmount: parseFloat(e.target.value) * parseFloat(prevState.qty) || 0\n            };\n         });\n    }\n    \n    useEffect(() => {     \n        props.onGetServiceRowValues(serviceRowValues);\n    }, [serviceRowValues]);\n\n    return (\n        <Form.Row >\n<Form.Group as={Col} className=\"col-md-1\">\n    <ButtonGroup >\n        <Button\n         variant=\"danger\"\n         onClick={() => props.onDelete(serviceRowValues)}\n          disabled={props.first} >Sil</Button>\n    </ButtonGroup>\n</Form.Group>\n\n<Form.Group as={Col} className=\"col-md-1\" >\n    <Form.Control onChange={onGetQty} value={serviceRowValues.qty} type=\"number\" />\n</Form.Group>\n\n<Form.Group as={Col} className=\"col-md-1\">\n    <Form.Control as=\"select\" onChange={onGetUnitType} value={serviceRowValues.unitType}>\n        <option>Adet</option>\n        <option>GR</option>\n        <option>KG</option>\n        <option>M</option>\n        <option>M2</option>\n        <option>CM3</option>\n        <option>Litre</option>\n        <option>M3</option>\n    </Form.Control>\n</Form.Group>\n\n<Form.Group onChange={onGetServiceDesc} value={serviceRowValues.serviceDesc} as={Col} >\n    <Form.Control />\n</Form.Group>\n<Form.Group as={Col} className=\"col-md-2\" >\n    <InputGroup className=\"mb-2 mr-sm-2\">\n        <FormControl onChange={onGetUnitPrice} value={serviceRowValues.unitPrice} type=\"number\" />\n        <InputGroup.Prepend>\n            <InputGroup.Text>TL</InputGroup.Text>\n        </InputGroup.Prepend>\n    </InputGroup>\n</Form.Group>\n\n<Form.Group as={Col} className=\"col-md-2\" >\n    <InputGroup className=\"mb-2 mr-sm-2\">\n        <FormControl value={serviceRowValues.totalAmount} type=\"number\" disabled/>\n        <InputGroup.Prepend>\n            <InputGroup.Text>TL</InputGroup.Text>\n        </InputGroup.Prepend>\n    </InputGroup>\n</Form.Group>\n</Form.Row>\n    );\n} \n\nexport default ServiceRow;","import React, { useState } from 'react';\nimport {\n    Button,\n    Form,\n    Accordion,\n    Card\n} from 'react-bootstrap';\n\nconst OBAccordion = props => {\n    return (\n        <Accordion>\n<Card>\n    <Card.Header>\n        <Accordion.Toggle\n            as={Button}\n            variant=\"info\"\n            eventKey=\"0\"\n            onClick={props.onToggleTxtAccordion}>\n            {props.title} {props.isPlus ? \"-\" : \"+\"}\n        </Accordion.Toggle>\n    </Card.Header>\n    <Accordion.Collapse eventKey=\"0\">\n        <Form.Control\n         as={props.type}\n          rows={props.rows}\n           placeholder={props.placeholder}\n           onChange={e => props.onTextChange(e)} />\n    </Accordion.Collapse>\n</Card>\n</Accordion>\n    );\n}\n\nexport default OBAccordion;\n","import React, { useState } from 'react';\nimport {\n    Form,\n    Col,\n} from 'react-bootstrap';\n\nconst ServiceRowHeader= props => {\n    return (\n        <Form.Group as={Col} className={props.colw} >\n        <Form.Label className={props.labelclass}>{props.label}</Form.Label>\n        </Form.Group>\n    );\n} \n\nexport default ServiceRowHeader;\n","import { saveAs } from \"file-saver\";\nimport {\n  AlignmentType,\n  Document,\n  Media,\n  Packer,\n  Paragraph,\n  Table,\n  TableCell,\n  TableRow,\n  BorderStyle,\n  HeadingLevel,\n  convertInchesToTwip\n} from \"docx\";\n\n\n\nconst customContractWord = (img = '', data, contractTableHeaders) => {\n  const doc = new Document({\n    styles: {\n      default: {\n        heading1: {\n          run: {\n            size: 28,\n            bold: true,\n            color: \"black\",\n          }\n        },\n        heading3: {\n          run: {\n            size: 20,\n            bold: true,\n            color: \"black\",\n          }\n        },\n      }\n    }\n  });\n  const noBorder = {\n    top: {\n      style: BorderStyle.NONE,\n    },\n    bottom: {\n      style: BorderStyle.NONE,\n    },\n    left: {\n      style: BorderStyle.NONE,\n    },\n    right: {\n      style: BorderStyle.NONE,\n    }\n  };\n  \n  const contractTableMargins = {\n    top: convertInchesToTwip(0.1),\n    bottom: convertInchesToTwip(0.1),\n    left: convertInchesToTwip(0.1),\n    right: convertInchesToTwip(0.1),\n  };\n  \n  const createContractRowGrands = (subTotalName, subTotalAmount, textInNextCell = '') => {\n    const row = new TableRow({\n        children: [\n      new TableCell({  \n          children:[new Paragraph('')]      \n      }),\n      new TableCell({  \n        children:[new Paragraph('')]     \n      }),\n      new TableCell({  \n        children:[new Paragraph('')]     \n      }),\n      new TableCell({  \n        children:[new Paragraph({\n         text: subTotalName,\n         heading: HeadingLevel.HEADING_3\n        })],\n        margins: contractTableMargins   \n      }),\n      new TableCell({  \n        children:[new Paragraph({\n         text: textInNextCell.toString(),\n         heading: HeadingLevel.HEADING_3\n        })],\n        margins: contractTableMargins     \n      }),\n      new TableCell({  \n        children:[new Paragraph({\n          text: subTotalAmount.toString(),\n         heading: HeadingLevel.HEADING_3\n        })],\n        margins: contractTableMargins     \n      })],\n      height: {\n        height: 500,\n      }\n    });  \n  return row;\n  }\n  \n  /********** Header **********/\n  let headTable = new Table({\n    borders: noBorder,\n    alignment: AlignmentType.CENTER,\n    rows: [\n      new TableRow({\n        children: [\n          new TableCell({\n            verticalAlign: \"center\",\n            children: [new Paragraph({\n              text: data.companyName,\n              heading: HeadingLevel.HEADING_1,\n\n            })],\n\n          })\n        ],\n      })\n    ],\n  });\n  if (img !== '') {\n    const image = Media.addImage(\n      doc,\n      Uint8Array.from(atob(img), c => c.charCodeAt(0))\n    );\n\n    headTable = new Table({\n      borders: noBorder,\n      alignment: AlignmentType.CENTER,\n      rows: [\n        new TableRow({\n          children: [\n            new TableCell({\n              verticalAlign: \"center\",\n              children: [new Paragraph({\n                text: data.companyName + \"\\t\\t\\t\\t\\t\\t\",\n                heading: HeadingLevel.HEADING_1,\n\n              })],\n\n            }),\n            new TableCell({\n              children: [new Paragraph(image)],\n            }),\n          ],\n        })\n      ],\n    });\n  };\n  const firstLineIndent = 800;\n  let entryTxtParagraph = new Paragraph('');\n  let contractTable = new Paragraph('');\n  let lastTxtParagraph = new Paragraph('');\n  let signArea = [new Paragraph(''), new Paragraph('')];\n\n  if (data.entryTxt !== '') {\n    entryTxtParagraph = new Paragraph({\n      text: data.entryTxt,\n      indent: {\n        firstLine: firstLineIndent\n      }\n    });\n  };\n\n  if (data.lastTxt !== '') {\n    lastTxtParagraph = new Paragraph({\n      text: data.lastTxt,\n      indent: {\n        firstLine: firstLineIndent\n      }\n    });\n  };\n\n  if (parseFloat(data.grandTotal) !== 0) {\n    \n    const contractTableHeaderCells = [];\n    for (let header in contractTableHeaders) {\n      contractTableHeaderCells.push(new TableCell({        \n        children: [new Paragraph({\n          text: contractTableHeaders[header].label,   \n          heading: HeadingLevel.HEADING_3       \n        })],\n        width: {\n          size:16,\n          type: \"pct\"\n        },\n        margins: contractTableMargins,\n        verticalAlign: AlignmentType.CENTER,\n      }));\n    };\n    const contractTableHeader = new TableRow({\n      children: contractTableHeaderCells,\n      tableHeader: true,\n    });\n    const contractTableAllRows = [];\n    contractTableAllRows.push(contractTableHeader);\n\n    for(let el in data.serviceItems) {\n      const contractTableDataCells = [];\n      for(let opts in data.serviceItems[el]) {\n        console.log(parseInt(el));\n        switch (opts) {\n          case 'rowId': \n          contractTableDataCells.push(new TableCell({        \n            children: [new Paragraph({\n              text: (parseInt(el) + 1).toString(),          \n            })],\n            width: {\n              size:16,\n              type: \"pct\"\n            },\n            margins: contractTableMargins,\n            verticalAlign: AlignmentType.CENTER\n          }));\n          break;\n          default:\n            contractTableDataCells.push(new TableCell({        \n              children: [new Paragraph({\n                text: data.serviceItems[el][opts].toString(),          \n              })],\n              width: {\n                size:16,\n                type: \"pct\"\n              },\n              margins: contractTableMargins,\n              verticalAlign: AlignmentType.CENTER\n            }));\n            break;\n        }\n      }\n       \n\n        contractTableAllRows.push(new TableRow({\n          children: contractTableDataCells,\n          height: {\n            height: 500,\n          }\n        }));\n    };   \n\n    contractTableAllRows.push(createContractRowGrands('Genel Toplam', data.grandTotal.toFixed(2)));\n    parseFloat(data.discount) !== 0 && contractTableAllRows.push(createContractRowGrands('İndirim', data.discountAmount.toFixed(2) ,'%' + data.discount));\n    parseFloat(data.tax) !== 0 && contractTableAllRows.push(createContractRowGrands('KDV', data.taxAmount.toFixed(2) ,'%' + data.tax));\n    contractTableAllRows.push(createContractRowGrands('Net Toplam', data.netAmount));\n\n    contractTable = new Table({\n      alignment: AlignmentType.CENTER,\n      rows: contractTableAllRows\n    });    \n  };\n\n  if(data.isSignAreaVisible) {\n    signArea[1] = new Paragraph({\n      text: 'İmza',\n      alignment: AlignmentType.END,\n      heading: HeadingLevel.HEADING_3\n    });\n    signArea[0] = new Paragraph({\n      text: 'Ad/Soyad',\n      alignment: AlignmentType.END,\n      heading: HeadingLevel.HEADING_3\n    });\n  }\n\n  doc.addSection({\n    children: [new Paragraph(\n      {\n        text: \"Tarih: \" + data.date + \"\\n\\n\\n\",\n        alignment: AlignmentType.END,\n        heading: HeadingLevel.HEADING_3\n      }\n    ),\n    new Paragraph(''), new Paragraph(''), new Paragraph(''),\n      headTable,\n    new Paragraph(''), new Paragraph(''), new Paragraph(''),\n      entryTxtParagraph,\n      new Paragraph(''), new Paragraph(''), new Paragraph(''),\n      contractTable,\n      new Paragraph(''), new Paragraph(''), new Paragraph(''),\n      lastTxtParagraph,\n      new Paragraph(''), new Paragraph(''), new Paragraph(''),\n      signArea[0],\n      signArea[1]\n    ]\n  });\n\n\n  /********** Header **********/\n\n  Packer.toBlob(doc).then(blob => {\n    saveAs(blob, \"teklif.docx\");\n    console.log(\"Document created successfully\");\n  });\n\n};\n\nexport default customContractWord;","import React, { useEffect, useRef, useState } from 'react';\n\nimport {\n    Button,\n    Form,\n    ButtonGroup,\n    Row,\n    Col,\n    InputGroup\n} from 'react-bootstrap';\n\nimport CompanyAndLogo from '../../components/UI/CompanyAndLogo/CompanyAndLogo';\nimport ServiceRow from './ServiceRow/ServiceRow';\nimport OBAccordion from '../../components/UI/OBAccordion/OBAccordion';\nimport ServiceRowHeader from './ServiceRow/ServiceRowHeader';\nimport customContractToWord from '../../util/Word/customContract_word';\n\nimport styles from './CustomContract.module.css';\nimport './customContract.css';\n\nconst CustomContract = props => {\n    const pageLoadedCount = useRef(0);\n    const date = new Date();\n    const [isAccordionShown, setIsAccordionShown] = useState({\n        entryTxt: false,\n        lastTxt: false\n    });\n    const [clearForm, setClearForm] = useState(false);\n    const [isDeletion, setIsDeletion] = useState(false);\n    const [companyLogo, setCompanyLogo] = useState('');\n    const [childServiceRowValue, setChildServiceRowValue] = useState({});\n    const [controls, setControls] = useState({\n        isTouched: false,\n        companyName: '',\n        entryTxt: '',\n        serviceItems: [],\n        lastTxt: '',\n        date: date.getDate() + '/' + date.getMonth() + '/' + date.getFullYear(),\n        discount: 0,\n        tax: 0,\n        isSignAreaVisible: false,\n        grandTotal: 0,\n        taxAmount: 0,\n        discountAmount: 0,\n        netAmount: 0\n    });\n    const contractRowHeaderArr = [\n        { label: '-', colW: 'col-md-1', labelClass: 'text-light' },\n        { label: 'Miktar', colW: 'col-md-1', labelClass: '' },\n        { label: 'Br.', colW: 'col-md-1', labelClass: '' },\n        { label: 'Ürün/Hizmet Açıklama', colW: '', labelClass: '' },\n        { label: 'Br. Fiyat', colW: 'col-md-2', labelClass: '' },\n        { label: 'Toplam Tutar', colW: 'col-md-2', labelClass: '' },\n    ];\n\n    const contractRowHeaders = contractRowHeaderArr.map(obj =>\n        <ServiceRowHeader\n            key={obj.label}\n            colw={obj.colW}\n            labelclass={obj.labelClass}\n            label={obj.label}\n        />\n    );\n\n    const toggleTxtAccordionHandler = e => {\n        if (e.target.innerHTML.split(\" \")[0] === \"Giriş\") {\n            setIsAccordionShown(prevState => {\n                return {\n                    ...prevState,\n                    entryTxt: !prevState.entryTxt\n                }\n            });\n        } else {\n            setIsAccordionShown(prevState => {\n                return {\n                    ...prevState,\n                    lastTxt: !prevState.lastTxt\n                }\n            });\n        };\n    };\n    const companyNameHandler = e => {\n        const compName = e.target.value.toString();\n        setControls(prevState => {\n            return {\n                ...prevState,\n                companyName: compName,\n                isTouched: true\n            }\n        })\n    };\n\n    const base64ImgHandler = base64Img => {\n        setCompanyLogo(base64Img);\n      };\n\n    const entryTextChangeHandler = e => {\n        setControls(prevState => {\n            return {\n                ...prevState,\n                entryTxt: e.target.value\n            };\n        });\n    };\n    const lastTextChangeHandler = e => {\n        setControls(prevState => {\n            return {\n                ...prevState,\n                lastTxt: e.target.value\n            }\n        });\n    };\n\n    const getServiceRowValuesHandler = values => {\n        setChildServiceRowValue(values);\n    }\n\n    const firstRowKey = Date.now();\n    const [serviceRows, setServiceRows] = useState([<ServiceRow\n        onGetServiceRowValues={getServiceRowValuesHandler}\n        key={firstRowKey} jsxkey={firstRowKey.toString()} first />]);\n\n    const deleteServiceRowHandler = values => {\n        setChildServiceRowValue(values);\n        setIsDeletion(true);\n    };\n\n    const addServiceRowHandler = () => {\n        const serviceRowArr = serviceRows.map(obj => obj);\n        const objKey = Date.now();\n        serviceRowArr.push(<ServiceRow\n            onGetServiceRowValues={getServiceRowValuesHandler}\n            onDelete={deleteServiceRowHandler}\n            key={objKey}\n            jsxkey={objKey.toString()} />);\n        setServiceRows(serviceRowArr);\n    };\n\n    const discountHandler = e => {\n        const discountperc = e.target.value || 0;\n        const discAmount = parseFloat(controls.grandTotal) * parseFloat(discountperc) / 100;\n        const netTotal = parseFloat(controls.grandTotal) - (parseFloat(controls.taxAmount) + parseFloat(discAmount));\n        setControls(prevState => {\n            return {\n                ...prevState,\n                discount: discountperc,\n                discountAmount: discAmount,\n                netAmount: netTotal\n            }\n        })\n    };\n\n    const taxHandler = e => {\n        const taxperc = parseFloat(e.target.value);\n        const taxAmount = parseFloat(controls.grandTotal) * parseFloat(taxperc);\n        const netTotal = parseFloat(controls.grandTotal) - (parseFloat(controls.discountAmount) + parseFloat(taxAmount));\n        setControls(prevState => {\n            return {\n                ...prevState,\n                tax: taxperc,\n                taxAmount: taxAmount,\n                netAmount: netTotal\n            }\n        })\n    };\n\n    const signatureToggleHandler = e => {\n        setControls(prevState => {\n            return {\n                ...prevState,\n                isSignAreaVisible: !prevState.isSignAreaVisible,\n        isTouched: true\n\n            }\n        });\n    };\n\n    useEffect(() => {\n        let index = -1;\n        for (let i = 0; i < serviceRows.length; i++) {\n            if (serviceRows[i].key === childServiceRowValue.rowId) {\n                index = i;\n                break;\n            }\n        }\n        if (index !== -1) {\n            let updatedServiceItems = controls.serviceItems;\n            let updatedGrandTotal = 0;\n            let updatedTaxAmount = 0;\n            let updatedDiscountAmount = 0;\n            let updatedNetAmount = 0;\n\n            if (!isDeletion) {\n                updatedServiceItems[index] = childServiceRowValue;      \n           \n            } else {\n                const updatedServiceRows = serviceRows.filter(item => item.key !== childServiceRowValue.rowId);\n                setServiceRows(updatedServiceRows);\n                setIsDeletion(false);\n                updatedServiceItems = controls.serviceItems.filter(item => item.rowId !== childServiceRowValue.rowId);\n            }\n            for (let el in updatedServiceItems) {\n                updatedGrandTotal += updatedServiceItems[el].totalAmount;\n            }\n            updatedTaxAmount = updatedGrandTotal * controls.tax;\n            updatedDiscountAmount = updatedGrandTotal * (controls.discount / 100);\n            updatedNetAmount = updatedGrandTotal - updatedTaxAmount - updatedDiscountAmount;\n\n            setControls(prevState => {\n                return {\n                    ...prevState,\n                    serviceItems: updatedServiceItems,\n                    grandTotal: updatedGrandTotal,\n                    taxAmount: updatedTaxAmount,\n                    discountAmount: updatedDiscountAmount,\n                    netAmount: updatedNetAmount,\n                }\n            });\n\n            if(pageLoadedCount.current >= 2) {\n                setControls(prevState => {\n                    return {\n                        ...prevState,\n                        isTouched: true                   \n                    }\n                });\n            }\n        }\n\n    }, [childServiceRowValue, isDeletion]);\n\n    useEffect(() => {\n        setClearForm(false);\n        pageLoadedCount.current++;\n    }, [controls]);\n\n\n    const clearFormHandler = () => {\n        setClearForm(true);\n        setCompanyLogo('');\n        setControls({\n            companyName: '',\n            entryTxt: '',\n            serviceItems: [],\n            lastTxt: '',\n            date: date.getDate() + '/' + date.getMonth() + '/' + date.getFullYear(),\n            discount: 0,\n            tax: 0,\n            isSignAreaVisible: false\n        });\n        setServiceRows([<ServiceRow\n            onGetServiceRowValues={getServiceRowValuesHandler}\n            key={firstRowKey} jsxkey={firstRowKey.toString()} first />]);\n\n    }\n\n    const createWordHandler = () => {\n        const updatedcontractRowHeaderArr = contractRowHeaderArr.map(el => el);\n        updatedcontractRowHeaderArr[0].label = 'No';\n        const wordData = {\n            logo: companyLogo.split(',')[1],\n            formData: controls,\n            contractTableHeaders: updatedcontractRowHeaderArr\n        };\n        customContractToWord(wordData.logo, wordData.formData, wordData.contractTableHeaders);\n    };\n\n    return (\n        <div className={styles.CustomContractContainer + \" customContractContainer\"}>\n            <div className=\"desktop-only\" >\n\n            <CompanyAndLogo \n            onInputChange={companyNameHandler}\n            inputValue={controls.companyName}\n            inputType=\"text\"\n            inputPlaceholder=\"Şirket İsmi\"\n            dropZoneLabel=\"Logo\"\n            onClearDropzone={clearForm}\n            dropTxt=\"Bu alana tıklayın veya dosyayı sürükleyin\"\n            dropNote=\"Sadece 3MB'den küçük jpg,jpeg,png dosyası yüklenebilir!\"\n            fileTypes=\"image/jpeg, image/jpg, image/png\"\n            file_type_error_msg=\"Lütfen sadece 3MB'den küçük jpg,jpeg,png dosyası yükleyin!\"\n            ongetbase64={base64ImgHandler}\n            maxFileSize={3}\n            />\n            <div className={styles.SectionContainer} >\n                <OBAccordion\n                    title=\"Giriş Yazısı\"\n                    onToggleTxtAccordion={toggleTxtAccordionHandler}\n                    isPlus={isAccordionShown.entryTxt}\n                    rows={5}\n                    type=\"textarea\"\n                    placeholder=\"Giriş yazısı yazınız\"\n                    onTextChange={entryTextChangeHandler}\n                />\n            </div>\n            </div>\n            <div className={styles.SectionContainer} >\n                <Form.Row style={{ marginBottom: \"-25px\" }}>\n                    {contractRowHeaders}\n                </Form.Row>\n                {serviceRows}\n                <Form.Row className=\"justify-content-end\">\n                    <Button variant=\"success\"\n                        disabled={props.first}\n                        onClick={addServiceRowHandler}\n                    >Satır Ekle</Button>\n                </Form.Row>\n                <Form.Row className=\"justify-content-around align-items-center\" >\n\n                    <Form.Group as={Row}>\n                        <Form.Label column sm={2}>İndirim</Form.Label>\n                        <Col sm={10}>\n                            <InputGroup className=\"col-md-6\">\n                                <Form.Control\n                                    onChange={discountHandler}\n                                    value={controls.discount}\n                                    type=\"number\" />\n                                <InputGroup.Prepend>\n                                    <InputGroup.Text>%</InputGroup.Text>\n                                </InputGroup.Prepend>\n\n                            </InputGroup>\n                        </Col>\n\n                    </Form.Group>\n                    <Form.Group as={Row}>\n                        <Form.Label column sm={2}>KDV</Form.Label>\n                        <Col sm={10}>\n                            <InputGroup className=\"col-md-11\">\n                                <Form.Control as=\"select\" onChange={taxHandler} value={controls.tax} >\n                                    <option value={0} >0</option>\n                                    <option value={0.08}>%8</option>\n                                    <option value={0.18}>%18</option>\n                                </Form.Control>\n                            </InputGroup>\n                        </Col>\n\n                    </Form.Group>\n                </Form.Row>\n                <div className={styles.TotalsContainer} >\n                    <Form.Row >\n                        <Form.Label>Toplam Tutar_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _{parseFloat(controls.grandTotal).toFixed(2)}</Form.Label>\n                    </Form.Row>\n                    {parseFloat(controls.discount) !== 0 && <Form.Row >\n                        <Form.Label>İndirim Tutarı_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _{parseFloat(controls.discountAmount).toFixed(2)}</Form.Label>\n                    </Form.Row>}\n\n                    {controls.tax !== 0 &&\n                        <Form.Row >\n                            <Form.Label>KDV Tutarı_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ {parseFloat(controls.taxAmount).toFixed(2)}</Form.Label>\n                        </Form.Row>}\n                    <Form.Row >\n                        <Form.Label>Net Tutar _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ {parseFloat(controls.netAmount).toFixed(2)}</Form.Label>\n                    </Form.Row>\n                </div>\n            <div className=\"desktop-only\" >\n                <div className={styles.SectionContainer} >\n                    <OBAccordion\n                        title=\"Son Yazı\"\n                        onToggleTxtAccordion={toggleTxtAccordionHandler}\n                        placeholder=\"Son yazı yazınız\"\n                        isPlus={isAccordionShown.lastTxt}\n                        rows={5}\n                        type=\"textarea\"\n                        onTextChange={lastTextChangeHandler}\n                    />\n                </div>\n                </div>\n            </div>\n            <div className=\"desktop-only\" >\n\n            <Form.Row className=\"justify-content-around align-items-center\" >\n                <Form.Group >\n                    <Form.Check\n                        onChange={signatureToggleHandler}\n                        size=\"lg\"\n                        type=\"checkbox\"\n                        label=\"İmza Alanı Ekle\"\n                        checked={controls.isSignAreaVisible} />\n                </Form.Group>\n            </Form.Row>\n            <ButtonGroup className=\"col-md-6\">\n                <Button onClick={createWordHandler} disabled={controls.companyName === '' } >Word Oluştur</Button>\n                <Button variant=\"danger\" onClick={clearFormHandler} >Temizle</Button>\n            </ButtonGroup>\n                {(controls.companyName === '' && controls.isTouched) && <p className=\"text-danger\" >Word çıktısı için şirket ismi giriniz!!</p>}\n            </div>\n        </div>\n    );\n};\n\nexport default CustomContract;","// extracted by mini-css-extract-plugin\nmodule.exports = {\"SectionContainer\":\"CompanyAndLogo_SectionContainer__1lnZS\"};","import React, {useEffect, useState} from 'react';\n// import { InputGroup, Button } from 'react-bootstrap';\nimport { useDropzone } from 'react-dropzone';\n\nimport './dropzone.css';\n\nconst DropZoneSingleFile = props => {\n    const [isBtnDisabled, setIsBtnDisabled] = useState(true);\n    const [base64Image, setBase64Image] = useState('');\n\n    const {\n        acceptedFiles,\n        fileRejections,\n        getRootProps,\n        getInputProps\n    } = useDropzone({\n        accept: props.acceptedFiles,\n        maxFiles: 1,\n        maxSize: props.maxFileSize * 1024 * 1024,\n    });\n\n    const removeAll = () => {\n        acceptedFiles.length = 0\n        acceptedFiles.splice(0, acceptedFiles.length)\n      }\n\n    if(props.formClear) {\n        removeAll();\n    }\n\n    const acceptedFileItems = acceptedFiles.map(file => {\n        return (<li key={file.path}>\n            {file.path}/{file.size} bytes - <img height=\"70\" src={base64Image} alt={file.path} />\n        </li>);\n    });\n\n    const fileRejectionItems = fileRejections.map(({ file, errors }) => {\n        switch (errors[0].code) {\n            case 'file-invalid-type':\n                return props.file_type_error;\n            case 'file-too-large':\n                return 'Dosya boyutu çok büyük!';\n            case 'file-too-small':\n                return 'Dosya boyutu çok küçük!';\n            case 'too-many-files':\n                return 'Toplam dosya adedi çok fazla!';\n            default:\n                return 'Bilinmeyen hata!';\n        }\n    }); \n\n\n    const getBase64 = async (file) => {\n        var reader = new FileReader();\n        reader.readAsDataURL(file);\n      \n        return new Promise((resolve, reject) => {\n          reader.onload = () => resolve(reader.result);\n          reader.onerror = (error) => reject(error);\n        })\n      }\n\n    useEffect(() => {\n        if(acceptedFileItems.length > 0) {\n            setIsBtnDisabled(false);\n            getBase64(acceptedFiles[0]).then(result => setBase64Image(result));\n            props.getBase64Img(base64Image);\n        } else {\n            setIsBtnDisabled(true);\n        }\n    }, [acceptedFileItems]);\n\n    \n    return (\n        <section className=\"container\">\n            <div {...getRootProps({ className: 'dropzone' })}>\n                <input {...getInputProps()} />\n                <p>{props.droptext}</p>\n                <em>{props.dropnote}</em>\n            </div>\n            <aside>\n                <ul className=\"dropzone-list mt-3 text-success\">{acceptedFileItems}</ul>\n                <ul className=\"dropzone-list mt-3 text-danger\">{fileRejectionItems[0]}</ul>             \n                {/* <InputGroup className=\"mb-3\">                   \n                    <InputGroup.Append>\n                        <Button variant=\"outline-primary\" disabled={isBtnDisabled}>Upload</Button>\n                    </InputGroup.Append>\n                </InputGroup> */}\n            </aside>\n        </section>\n    );\n}\n\nexport default DropZoneSingleFile;","import React from 'react';\n\nimport {\n    Form,\n} from 'react-bootstrap';\n\nimport SingleFileDropZone from '../DropZone/DropZoneSingleFile';\n\nimport styles from './CompanyAndLogo.module.css';\n\nconst CompanyAndLogo = props => {\n    return (\n        <Form.Row className={\"justify-content-around align-items-center \" + props.classes}>\n<div className={styles.SectionContainer} >\n    <Form.Label>{props.inputLabel}</Form.Label>\n    <Form.Control\n        onChange={props.onInputChange}\n        value={props.inputValue}\n        type={props.inputType}\n        placeholder={props.inputPlaceholder} />\n</div>\n<div className={styles.SectionContainer} >\n    <Form.Label>{props.dropZoneLabel}</Form.Label>\n    <SingleFileDropZone\n        formClear={props.onClearDropzone}\n        droptext={props.dropTxt}\n        dropnote={props.dropNote}\n        acceptedFiles={props.fileTypes}\n        file_type_error={props.file_type_error_msg}\n        getBase64Img={props.ongetbase64}\n        maxFileSize={props.maxFileSize}\n    />\n</div>\n</Form.Row>\n    );\n}\n\nexport default CompanyAndLogo;"],"sourceRoot":""}