{"version":3,"sources":["containers/AreaContract/AreaContract.module.css","util/Word/expoContract_word.js","containers/AreaContract/AreaContract.js","components/UI/CompanyAndLogo/CompanyAndLogo.module.css","components/UI/DropZone/DropZoneSingleFile.js","components/UI/CompanyAndLogo/CompanyAndLogo.js"],"names":["module","exports","expoContractWord","img","data","contractTableHeaders","doc","Document","styles","default","heading1","run","size","bold","color","heading3","noBorder","top","style","BorderStyle","NONE","bottom","left","right","contractTableMargins","convertInchesToTwip","createContractRowGrands","subTotalName","subTotalAmount","textInNextCell","row","TableRow","children","TableCell","Paragraph","text","heading","HeadingLevel","HEADING_3","margins","toString","height","headTable","Table","borders","alignment","AlignmentType","CENTER","rows","verticalAlign","companyName","HEADING_1","image","Media","addImage","Uint8Array","from","atob","c","charCodeAt","contractTableHeaderCells","header","push","width","type","contractTableHeader","tableHeader","contractTableAllRows","contractTableDataCells","signArea","meterSq","unitPrice","currencyType","currency","stampTax","unitPriceTL","toFixed","netTotalTL","KDVTL","stampTaxTL","totalTL","contractTable","isSignAreaVisible","END","addSection","date","Packer","toBlob","then","blob","saveAs","console","log","AreaContract","props","Date","useState","clearForm","setClearForm","companyLogo","setCompanyLogo","isAccordionShown","setIsAccordionShown","isTouched","getDate","getMonth","getFullYear","controls","setControls","inputHandler","e","id","target","prevState","value","className","Accordion","marginTop","Card","Header","Toggle","as","Button","variant","eventKey","onClick","Collapse","CompanyAndLogo","classes","noMargin","onInputChange","compName","inputValue","inputType","inputPlaceholder","dropZoneLabel","onClearDropzone","dropTxt","dropNote","fileTypes","file_type_error_msg","ongetbase64","base64Img","maxFileSize","Form","Group","Col","Label","Control","onChange","placeholder","InputGroup","FormControl","defaultValue","Prepend","Text","Number","toLocaleString","disabled","Row","Check","label","checked","ButtonGroup","wordData","logo","split","formData","expoContractToWord","DropZoneSingleFile","setIsBtnDisabled","base64Image","setBase64Image","useDropzone","accept","acceptedFiles","maxFiles","maxSize","fileRejections","getRootProps","getInputProps","formClear","length","splice","acceptedFileItems","map","file","path","src","alt","fileRejectionItems","errors","code","file_type_error","getBase64","a","reader","FileReader","readAsDataURL","Promise","resolve","reject","onload","result","onerror","error","useEffect","getBase64Img","droptext","dropnote","SectionContainer","inputLabel"],"mappings":"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","file":"static/js/5.a9b38ffb.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"FormContainer\":\"AreaContract_FormContainer__wuJuQ\"};","import { saveAs } from \"file-saver\";\nimport {\n  AlignmentType,\n  Document,\n  Media,\n  Packer,\n  Paragraph,\n  Table,\n  TableCell,\n  TableRow,\n  BorderStyle,\n  HeadingLevel,\n  convertInchesToTwip\n} from \"docx\";\n\n\n\nconst expoContractWord = (img = '', data, contractTableHeaders) => {\n  const doc = new Document({\n    styles: {\n      default: {\n        heading1: {\n          run: {\n            size: 28,\n            bold: true,\n            color: \"black\",\n          }\n        },\n        heading3: {\n          run: {\n            size: 20,\n            bold: true,\n            color: \"black\",\n          }\n        },\n      }\n    }\n  });\n  const noBorder = {\n    top: {\n      style: BorderStyle.NONE,\n    },\n    bottom: {\n      style: BorderStyle.NONE,\n    },\n    left: {\n      style: BorderStyle.NONE,\n    },\n    right: {\n      style: BorderStyle.NONE,\n    }\n  };\n  \n  const contractTableMargins = {\n    top: convertInchesToTwip(0.1),\n    bottom: convertInchesToTwip(0.1),\n    left: convertInchesToTwip(0.1),\n    right: convertInchesToTwip(0.1),\n  };\n  \n  const createContractRowGrands = (subTotalName, subTotalAmount, textInNextCell = '') => {\n    const row = new TableRow({\n        children: [\n      new TableCell({  \n          children:[new Paragraph('')]      \n      }),\n      new TableCell({  \n        children:[new Paragraph('')]     \n      }),    \n      new TableCell({  \n        children:[new Paragraph({\n         text: subTotalName,\n         heading: HeadingLevel.HEADING_3\n        })],\n        margins: contractTableMargins   \n      }),\n      new TableCell({  \n        children:[new Paragraph({\n         text: textInNextCell.toString(),\n         heading: HeadingLevel.HEADING_3\n        })],\n        margins: contractTableMargins     \n      }),\n      new TableCell({  \n        children:[new Paragraph({\n          text: subTotalAmount.toString(),\n         heading: HeadingLevel.HEADING_3\n        })],\n        margins: contractTableMargins     \n      })],\n      height: {\n        height: 500,\n      }\n    });  \n  return row;\n  }\n  \n  /********** Header **********/\n  let headTable = new Table({\n    borders: noBorder,\n    alignment: AlignmentType.CENTER,\n    rows: [\n      new TableRow({\n        children: [\n          new TableCell({\n            verticalAlign: \"center\",\n            children: [new Paragraph({\n              text: data.companyName,\n              heading: HeadingLevel.HEADING_1,\n\n            })],\n\n          })\n        ],\n      })\n    ],\n  });\n  if (img !== '') {\n    const image = Media.addImage(\n      doc,\n      Uint8Array.from(atob(img), c => c.charCodeAt(0))\n    );\n\n    headTable = new Table({\n      borders: noBorder,\n      alignment: AlignmentType.CENTER,\n      rows: [\n        new TableRow({\n          children: [\n            new TableCell({\n              verticalAlign: \"center\",\n              children: [new Paragraph({\n                text: data.companyName + \"\\t\\t\\t\\t\\t\\t\",\n                heading: HeadingLevel.HEADING_1,\n\n              })],\n\n            }),\n            new TableCell({\n              children: [new Paragraph(image)],\n            }),\n          ],\n        })\n      ],\n    });\n  };\n  const firstLineIndent = 800;\n    \n    const contractTableHeaderCells = [];\n    for (let header in contractTableHeaders) {\n      contractTableHeaderCells.push(new TableCell({        \n        children: [new Paragraph({\n          text: contractTableHeaders[header],   \n          heading: HeadingLevel.HEADING_3       \n        })],\n        width: {\n          size:16,\n          type: \"pct\"\n        },\n        margins: contractTableMargins,\n        verticalAlign: AlignmentType.CENTER,\n      }));\n    };\n    const contractTableHeader = new TableRow({\n      children: contractTableHeaderCells,\n      tableHeader: true,\n    });\n    const contractTableAllRows = [];\n    contractTableAllRows.push(contractTableHeader);\n\n      const contractTableDataCells = [];      \n     \n      let signArea = [new Paragraph(''), new Paragraph('')];\n\n        contractTableDataCells.push(new TableCell({        \n          children: [new Paragraph({\n            text: data.meterSq.toString(),          \n          })],\n          width: {\n            size:16,\n            type: \"pct\"\n          },\n          margins: contractTableMargins,\n          verticalAlign: AlignmentType.CENTER\n        }));   \n        \n        contractTableDataCells.push(new TableCell({        \n          children: [new Paragraph({\n            text: data.unitPrice.toString(),          \n          })],\n          width: {\n            size:16,\n            type: \"pct\"\n          },\n          margins: contractTableMargins,\n          verticalAlign: AlignmentType.CENTER\n        }));   \n\n        contractTableDataCells.push(new TableCell({        \n          children: [new Paragraph({\n            text: data.currencyType.toString(),          \n          })],\n          width: {\n            size:16,\n            type: \"pct\"\n          },\n          margins: contractTableMargins,\n          verticalAlign: AlignmentType.CENTER\n        }));  \n        \n        contractTableDataCells.push(new TableCell({        \n          children: [new Paragraph({\n            text: data.currency.toString(),          \n          })],\n          width: {\n            size:16,\n            type: \"pct\"\n          },\n          margins: contractTableMargins,\n          verticalAlign: AlignmentType.CENTER\n        })); \n\n        contractTableDataCells.push(new TableCell({        \n          children: [new Paragraph({\n            text: data.stampTax.toString(),          \n          })],\n          width: {\n            size:16,\n            type: \"pct\"\n          },\n          margins: contractTableMargins,\n          verticalAlign: AlignmentType.CENTER,          \n        })); \n\n        contractTableAllRows.push(new TableRow({\n          children: contractTableDataCells,\n          height: {\n            height: 500,\n          },          \n        }));\n\n        contractTableAllRows.push(createContractRowGrands('Br. Fiyat', data.unitPriceTL.toFixed(2), 'TL'));\n        contractTableAllRows.push(createContractRowGrands('Net Tutar', data.netTotalTL.toFixed(2), 'TL'));\n        contractTableAllRows.push(createContractRowGrands('KDV', data.KDVTL.toFixed(2), '%18'));\n        contractTableAllRows.push(createContractRowGrands('Damga Vergisi Tutarı', data.stampTaxTL.toFixed(2), data.stampTax.toString()));\n        contractTableAllRows.push(createContractRowGrands('Toplam Tutar', data.totalTL.toFixed(2), 'TL'));\n\n\n    const contractTable = new Table({\n      alignment: AlignmentType.CENTER,\n      rows: contractTableAllRows,\n    });    \n\n  /****** Sign Area ******/\n  if(data.isSignAreaVisible) {\n    signArea[1] = new Paragraph({\n      text: 'İmza',\n      alignment: AlignmentType.END,\n      heading: HeadingLevel.HEADING_3\n    });\n    signArea[0] = new Paragraph({\n      text: 'Ad/Soyad',\n      alignment: AlignmentType.END,\n      heading: HeadingLevel.HEADING_3\n    });\n  }\n  /****** Sign Area ******/\n\n\n  doc.addSection({\n    children: [new Paragraph(\n      {\n        text: \"Tarih: \" + data.date + \"\\n\\n\\n\",\n        alignment: AlignmentType.END,\n        heading: HeadingLevel.HEADING_3\n      }\n    ),\n    new Paragraph(''), new Paragraph(''), new Paragraph(''),\n      headTable,\n    new Paragraph(''), new Paragraph(''), new Paragraph(''),\n      contractTable,\n      new Paragraph(''), new Paragraph(''), new Paragraph(''),\n      signArea[0],\n      signArea[1]\n    ]\n  });\n\n\n  /********** Header **********/\n\n  Packer.toBlob(doc).then(blob => {\n    saveAs(blob, \"teklif.docx\");\n    console.log(\"Document created successfully\");\n  });\n\n};\n\nexport default expoContractWord;","import React, { useState} from 'react';\n\nimport {\n  Form,\n  Col,\n  InputGroup,\n  FormControl,\n  Accordion,\n  Card,\n  Button,\n  ButtonGroup\n} from 'react-bootstrap';\n\nimport CompanyAndLogo from '../../components/UI/CompanyAndLogo/CompanyAndLogo';\nimport expoContractToWord from '../../util/Word/expoContract_word';\n\nimport styles from './AreaContract.module.css';\n\nconst AreaContract = (props) => {\n  const date = new Date();\n  const [clearForm, setClearForm] = useState(false);\n  const [companyLogo, setCompanyLogo] = useState('');\n  const [isAccordionShown, setIsAccordionShown] = useState(false);  \n  const [controls, setControls] = useState({\n    isTouched: false,\n    companyName: '',\n    meterSq: 0,\n    currency: 1,\n    currencyType: 'TL',\n    date: date.getDate() + '/' + date.getMonth() + '/' + date.getFullYear(),\n    unitPrice: 0,\n    stampTax: 0,\n    isSignAreaVisible: false,   \n  });\n  const fixedDecimalDigit = 2;\n\n  const unitPriceTL = controls.unitPrice * controls.currency;\n  const netTotalTL = unitPriceTL * controls.meterSq;\n  const KDVTL = netTotalTL * 0.18;\n  const stampTaxTL = netTotalTL * controls.stampTax;\n  const totalTL = netTotalTL + KDVTL + stampTaxTL;\n\n  const inputHandler = (e) => {\n     const id =  e.target.id;\n    setControls((prevState) => {\n      return {\n        ...prevState,\n        [id]: e.target.value,\n        isTouched: true\n      };\n    });\n  };  \n\n  const signatureToggleHandler = e => {\n    setControls(prevState => {\n        return {\n            ...prevState,\n            isSignAreaVisible: !prevState.isSignAreaVisible,\n        isTouched: true\n\n        }\n    });\n};\n\n  const companyNameHandler = (e) => {\n    const compName = e.target.value.toString();\n    setControls((prevState) => {\n      return {\n        ...prevState,\n        companyName: compName,\n        isTouched: true\n      };\n    });\n  };\n\n  const base64ImgHandler = (base64Img) => {\n    setCompanyLogo(base64Img);\n  \n      console.log(base64Img);\n  };\n  const onToggleAccordion = () => {\n      setIsAccordionShown(!isAccordionShown);\n  };\n\n\n  const clearFormHandler = () => {\n    setClearForm(true);\n    setCompanyLogo('');\n    setIsAccordionShown(false);\n    setControls({\n      isTouched: false,\n      companyName: '',\n      meterSq: 0,\n      currency: 1,\n      currencyType: 'TL',\n      date: date.getDate() + '/' + date.getMonth() + '/' + date.getFullYear(),\n      unitPrice: 0,\n      stampTax: 0,\n      isSignAreaVisible: false,   \n    });\n  };\n  const createWordHandler = () => {\n    const contractRowHeaderArr = ['M2','Br. Fiyat','Kur Tipi','Kur/TL','Damga Vergisi Oranı'];\n    const wordData = {\n      logo: companyLogo.split(',')[1],\n      formData: {...controls,\n        unitPriceTL: unitPriceTL,\n        netTotalTL: netTotalTL,\n        KDVTL: KDVTL,\n        stampTaxTL: stampTaxTL,\n        totalTL: totalTL\n      },\n      contractTableHeaders: contractRowHeaderArr\n  };\n  expoContractToWord(wordData.logo, wordData.formData, wordData.contractTableHeaders);\n};\n\n  return (\n    <>\n    <div className=\"desktop-only\" >\n      <Accordion className=\"mb-5\" style={{marginTop:\"100px\"}}>\n        <Card>\n          <Card.Header className=\"text-center\">\n            <Accordion.Toggle\n              as={Button}\n              variant=\"info\"\n              eventKey=\"0\"\n              onClick={onToggleAccordion}\n            >\n              Şirket {isAccordionShown ? '-' : '+'}\n            </Accordion.Toggle>\n          </Card.Header>\n          <Accordion.Collapse eventKey=\"0\">\n          <CompanyAndLogo\n        classes={'col col-md-12 text-center'}\n        noMargin\n        onInputChange={companyNameHandler}\n        inputValue={controls.companyName}\n        inputType=\"text\"\n        inputPlaceholder=\"Şirket İsmi\"\n        dropZoneLabel=\"Logo\"\n        onClearDropzone={clearForm}\n        dropTxt=\"Bu alana tıklayın veya dosyayı sürükleyin\"\n        dropNote=\"Sadece 3MB'den küçük jpg,jpeg,png dosyası yüklenebilir!\"\n        fileTypes=\"image/jpeg, image/jpg, image/png\"\n        file_type_error_msg=\"Lütfen sadece 3MB'den küçük jpg,jpeg,png dosyası yükleyin!\"\n        ongetbase64={base64ImgHandler}\n        maxFileSize={3}\n      />\n          </Accordion.Collapse>\n        </Card>\n      </Accordion>\n    </div>\n      <div className=\"mb-5 container\">\n        <div className=\"row\">\n          <div className=\"col col-md-3\"></div>\n          <Form className=\"col-md-6 mt-2 text-center\">\n      <h3>Veri Girişi</h3>\n            <hr />\n            <div className=\"row \">\n              <Form.Group as={Col}>\n                <Form.Label>Metrekare</Form.Label>\n                <Form.Control\n                 id=\"meterSq\"\n                  type=\"number\"\n                  onChange={inputHandler}\n                  value={controls.meterSq}\n                  placeholder=\"Metrekare\"\n                />\n              </Form.Group>\n              <Col>\n                <Form.Label>Kur</Form.Label>\n                <InputGroup className=\"mb-2\">\n                  <FormControl\n                  id=\"currency\"\n                    className=\"col-md-9\"\n                    type=\"number\"\n                    onChange={inputHandler}\n                    value={controls.currency}\n                    placeholder=\"Kur\"\n                  />\n                  <Form.Control\n                    className=\"col-md-4\"\n                    onChange={inputHandler}\n                    as=\"select\"\n                    id=\"currencyType\"\n                    defaultValue={controls.currencyType}\n                  >\n                    <option value=\"TL\">TL</option>\n                    <option value=\"EUR\">EUR</option>\n                    <option value=\"USD\">USD</option>\n                  </Form.Control>\n                </InputGroup>\n              </Col>\n            </div>\n\n            <div className=\"row\">\n              <Col>\n                <Form.Label>Br. Fiyat</Form.Label>\n                <InputGroup className=\"mb-2\">\n                  <FormControl\n                  id=\"unitPrice\"\n                    className=\"col-md-9\"\n                    type=\"number\"\n                    onChange={inputHandler}\n                    value={controls.unitPrice}\n                    placeholder=\"Br. Fiyat\"\n                  />\n                  <InputGroup.Prepend>\n                    <InputGroup.Text>{controls.currencyType}</InputGroup.Text>\n                  </InputGroup.Prepend>\n                </InputGroup>\n              </Col>\n\n              <Form.Group as={Col}>\n                <Form.Label>Damga Vergisi Oranı</Form.Label>\n                <Form.Control\n                  onChange={inputHandler}\n                  as=\"select\"\n                  defaultValue={controls.stampTax}\n                  id=\"stampTax\"\n                >\n                  <option value=\"0\">0</option>\n                  <option value=\"0.00474\">0.00474</option>\n                  <option value=\"0.00948\">0.00948</option>\n                </Form.Control>\n              </Form.Group>\n            </div>\n\n            <h3>Hesaplamalar</h3>\n            <hr />\n\n            <Col>\n              <Form.Label>Br. Fiyat</Form.Label>\n              <InputGroup className=\"mb-2\">\n                <Form.Control\n                  placeholder=\"Br. Fiyat\"\n                  value={Number(\n                    unitPriceTL.toFixed(fixedDecimalDigit)\n                  ).toLocaleString()}\n                  disabled\n                />\n                <InputGroup.Prepend>\n                  <InputGroup.Text>TL</InputGroup.Text>\n                </InputGroup.Prepend>\n              </InputGroup>\n            </Col>\n            <Col>\n              <Form.Label>Net Tutar</Form.Label>\n              <InputGroup className=\"mb-2\">\n                <Form.Control\n                  placeholder=\"Net Tutar\"\n                  value={Number(\n                    netTotalTL.toFixed(fixedDecimalDigit)\n                  ).toLocaleString()}\n                  disabled\n                />\n                <InputGroup.Prepend>\n                  <InputGroup.Text>TL</InputGroup.Text>\n                </InputGroup.Prepend>\n              </InputGroup>\n            </Col>\n            <Col>\n              <Form.Label>KDV 18%</Form.Label>\n              <InputGroup className=\"mb-2\">\n                <Form.Control\n                  placeholder=\"KDV Tutarı\"\n                  value={Number(\n                    KDVTL.toFixed(fixedDecimalDigit)\n                  ).toLocaleString()}\n                  disabled\n                />\n                <InputGroup.Prepend>\n                  <InputGroup.Text>TL</InputGroup.Text>\n                </InputGroup.Prepend>\n              </InputGroup>\n            </Col>\n            <Col>\n              <Form.Label>Damga Vergisi Tutarı</Form.Label>\n              <InputGroup className=\"mb-2\">\n                <Form.Control\n                  value={Number(\n                    stampTaxTL.toFixed(fixedDecimalDigit)\n                  ).toLocaleString()}\n                  disabled\n                />\n                <InputGroup.Prepend>\n                  <InputGroup.Text>TL</InputGroup.Text>\n                </InputGroup.Prepend>\n              </InputGroup>\n            </Col>\n            <Col>\n              <Form.Label>Toplam Tutar</Form.Label>\n              <InputGroup className=\"mb-2\">\n                <Form.Control\n                  placeholder=\"Toplam Tutar\"\n                  value={Number(\n                    totalTL.toFixed(fixedDecimalDigit)\n                  ).toLocaleString()}\n                  disabled\n                />\n                <InputGroup.Prepend>\n                  <InputGroup.Text>TL</InputGroup.Text>\n                </InputGroup.Prepend>\n              </InputGroup>\n            </Col>\n\n            <div className=\"desktop-only\" >\n            <Form.Row className=\"justify-content-around align-items-center\" >\n                <Form.Group >\n                    <Form.Check\n                        onChange={signatureToggleHandler}\n                        size=\"lg\"\n                        type=\"checkbox\"\n                        label=\"İmza Alanı Ekle\"\n                        checked={controls.isSignAreaVisible} />\n                </Form.Group>\n            </Form.Row>\n            <ButtonGroup className=\"col-md-12 mt-3\">\n                <Button onClick={createWordHandler} disabled={controls.companyName === '' } >Word Oluştur</Button>\n                <Button variant=\"danger\" onClick={clearFormHandler} >Temizle</Button>\n            </ButtonGroup>\n                {(controls.companyName === '' && controls.isTouched) && <p className=\"text-danger\" >Word çıktısı için şirket ismi giriniz!</p>}\n            </div>\n          </Form>\n        </div>\n      </div>\n    </>\n  );\n};\n\nexport default AreaContract;\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"SectionContainer\":\"CompanyAndLogo_SectionContainer__1lnZS\"};","import React, {useEffect, useState} from 'react';\n// import { InputGroup, Button } from 'react-bootstrap';\nimport { useDropzone } from 'react-dropzone';\n\nimport './dropzone.css';\n\nconst DropZoneSingleFile = props => {\n    const [isBtnDisabled, setIsBtnDisabled] = useState(true);\n    const [base64Image, setBase64Image] = useState('');\n\n    const {\n        acceptedFiles,\n        fileRejections,\n        getRootProps,\n        getInputProps\n    } = useDropzone({\n        accept: props.acceptedFiles,\n        maxFiles: 1,\n        maxSize: props.maxFileSize * 1024 * 1024,\n    });\n\n    const removeAll = () => {\n        acceptedFiles.length = 0\n        acceptedFiles.splice(0, acceptedFiles.length)\n      }\n\n    if(props.formClear) {\n        removeAll();\n    }\n\n    const acceptedFileItems = acceptedFiles.map(file => {\n        return (<li key={file.path}>\n            {file.path}/{file.size} bytes - <img height=\"70\" src={base64Image} alt={file.path} />\n        </li>);\n    });\n\n    const fileRejectionItems = fileRejections.map(({ file, errors }) => {\n        switch (errors[0].code) {\n            case 'file-invalid-type':\n                return props.file_type_error;\n            case 'file-too-large':\n                return 'Dosya boyutu çok büyük!';\n            case 'file-too-small':\n                return 'Dosya boyutu çok küçük!';\n            case 'too-many-files':\n                return 'Toplam dosya adedi çok fazla!';\n            default:\n                return 'Bilinmeyen hata!';\n        }\n    }); \n\n\n    const getBase64 = async (file) => {\n        var reader = new FileReader();\n        reader.readAsDataURL(file);\n      \n        return new Promise((resolve, reject) => {\n          reader.onload = () => resolve(reader.result);\n          reader.onerror = (error) => reject(error);\n        })\n      }\n\n    useEffect(() => {\n        if(acceptedFileItems.length > 0) {\n            setIsBtnDisabled(false);\n            getBase64(acceptedFiles[0]).then(result => setBase64Image(result));\n            props.getBase64Img(base64Image);\n        } else {\n            setIsBtnDisabled(true);\n        }\n    }, [acceptedFileItems]);\n\n    \n    return (\n        <section className=\"container\">\n            <div {...getRootProps({ className: 'dropzone' })}>\n                <input {...getInputProps()} />\n                <p>{props.droptext}</p>\n                <em>{props.dropnote}</em>\n            </div>\n            <aside>\n                <ul className=\"dropzone-list mt-3 text-success\">{acceptedFileItems}</ul>\n                <ul className=\"dropzone-list mt-3 text-danger\">{fileRejectionItems[0]}</ul>             \n                {/* <InputGroup className=\"mb-3\">                   \n                    <InputGroup.Append>\n                        <Button variant=\"outline-primary\" disabled={isBtnDisabled}>Upload</Button>\n                    </InputGroup.Append>\n                </InputGroup> */}\n            </aside>\n        </section>\n    );\n}\n\nexport default DropZoneSingleFile;","import React from 'react';\n\nimport {\n    Form,\n} from 'react-bootstrap';\n\nimport SingleFileDropZone from '../DropZone/DropZoneSingleFile';\n\nimport styles from './CompanyAndLogo.module.css';\n\nconst CompanyAndLogo = props => {\n    return (\n        <Form.Row className={\"justify-content-around align-items-center \" + props.classes}>\n<div className={styles.SectionContainer} >\n    <Form.Label>{props.inputLabel}</Form.Label>\n    <Form.Control\n        onChange={props.onInputChange}\n        value={props.inputValue}\n        type={props.inputType}\n        placeholder={props.inputPlaceholder} />\n</div>\n<div className={styles.SectionContainer} >\n    <Form.Label>{props.dropZoneLabel}</Form.Label>\n    <SingleFileDropZone\n        formClear={props.onClearDropzone}\n        droptext={props.dropTxt}\n        dropnote={props.dropNote}\n        acceptedFiles={props.fileTypes}\n        file_type_error={props.file_type_error_msg}\n        getBase64Img={props.ongetbase64}\n        maxFileSize={props.maxFileSize}\n    />\n</div>\n</Form.Row>\n    );\n}\n\nexport default CompanyAndLogo;"],"sourceRoot":""}